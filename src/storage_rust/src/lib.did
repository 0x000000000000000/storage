

type Metadata =
 record {
   canister: principal;
   caller: principal;
   cycle: nat;
   method_name: text;
   transaction_time: nat;
   stable_size: nat;
 };

type Result =
variant {
    Ok : record {};
    Err : text;
};

service :{
    "createEvent": (Metadata) -> (Result);
    "getCanisterEvent":(principal,nat,nat) ->(vec Metadata) query;
    "getCallerEvent":(principal,nat,nat) ->(vec Metadata) query;
    "getLastEvent":(nat) -> (vec Metadata) query;
    "getCanisterLastEvent":(text,nat) -> (vec Metadata) query;
    "getCanisterList":() -> (vec principal) query;
}


